{"version":3,"sources":["images/homer-1.svg","images/homer-2.svg","images/homer-3.svg","App.js","index.js"],"names":["module","exports","App","state","bgColor","quoteIndex","quotesUsed","quote","newQuote","homerClick","homer","document","querySelector","src","homer3","setTimeout","homer1","quoteClick","homer2","bgColors","randomNum","Math","floor","random","randomBg","body","style","backgroundColor","buttons","querySelectorAll","i","length","getElementById","color","fill","pointerEvents","display","innerHTML","setState","tweetClick","e","target","parentNode","setAttribute","homerQuotes","arr","arguments","this","slice","index","push","indexOf","className","id","d","href","onClick","rel","alt","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.527ca980.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homer-1.c18d7493.svg\";","module.exports = __webpack_public_path__ + \"static/media/homer-2.b2d4d33e.svg\";","module.exports = __webpack_public_path__ + \"static/media/homer-3.66162d19.svg\";","import React, {Component} from 'react';\nimport homer1 from './images/homer-1.svg';\nimport homer2 from './images/homer-2.svg';\nimport homer3 from './images/homer-3.svg';\nimport homerQuotes from './quotes.json';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    bgColor: '#659FD5',\n    quoteIndex: 0,\n    quotesUsed: [],\n    quote: this.newQuote('init')\n  }\n\n  homerClick = () => {\n    let homer = document.querySelector('.footer-image');\n    homer.src = homer3;\n    setTimeout(function(){\n      homer.src = homer1;\n    }, 1000); \n  }\n\n  quoteClick = () => {\n    //homer image\n    let homer = document.querySelector('.footer-image');\n    homer.src = homer2;\n    setTimeout(function(){\n      homer.src = homer1;\n    }, 1000); \n    //bg transistion\n    let bgColors = ['#659FD5', '#EC385D', '#00BCC8', '#F8BEAA', '#F59209'];\n    let randomNum = Math.floor((Math.random() * 5));\n    let randomBg = bgColors[randomNum];\n    while (randomBg === this.state.bgColor) {\n      randomNum = Math.floor((Math.random() * 5));\n      randomBg = bgColors[randomNum];\n    }\n    document.body.style.backgroundColor = randomBg;\n    //buttons transition\n    let buttons = document.querySelectorAll('button');\n    for (let i = 0; i < buttons.length; i++) {\n      buttons[i].style.backgroundColor = randomBg;\n    }\n    //text transition\n    document.getElementById('author').style.color = randomBg;\n    document.querySelector('.quote-symbol').style.fill = randomBg;\n\n    let newQuote = this.newQuote();\n    \n    document.body.style.pointerEvents = 'none';\n    setTimeout(function() {\n      document.querySelector('.quote-text').style.display= 'block';\n      document.querySelector('.quote-text').innerHTML = newQuote;\n      document.body.style.pointerEvents = 'initial';\n    },1000);\n\n    //setstate\n    this.setState({\n      bgColor: randomBg,\n      quote: newQuote\n    }) \n  }\n\n  tweetClick = (e) => {\n    let link = e.target.parentNode;\n    link.setAttribute('href', `http://www.twitter.com/intent/tweet?text=\\\"${this.state.quote}\\\" -Homer Simpson`);\n  }\n\n  newQuote() {\n    //quote text show\n    let randomNum = Math.floor((Math.random() * homerQuotes.length));\n    let arr = [];\n    \n    if (arguments[0] !== 'init') {\n      arr = this.state.quotesUsed.slice();\n      if (this.state.quotesUsed.length === 0) {\n        let index = 0;\n        for (let i = 0; i < homerQuotes.length; i++) {\n          if (homerQuotes[i][\"quote\"] === this.state.quote) {\n            index = i;\n          }\n        }\n        arr.push(index);\n      }\n      if (this.state.quotesUsed.length === homerQuotes.length - 1) {\n        arr = [];\n      }\n      while (this.state.quotesUsed.indexOf(randomNum) >= 0) {\n        randomNum = Math.floor((Math.random() * homerQuotes.length));\n      }\n    }\n    \n    arr.push(randomNum);\n\n    this.setState({\n      quoteIndex: randomNum,\n      quotesUsed: arr\n    });\n\n    return(homerQuotes[randomNum]['quote']);\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container content-container\">\n          <div className=\"content\">\n            <div id=\"quote-box\">\n            <svg className=\"quote-symbol noselect\">\n              <path d=\"M20.7,26.1c0,2.4-1.3,3.6-4,3.6c-1.8,0-5-3.7-9.7-11C2.4,11.4,0.1,6.6,0,4.2\n              C-0.1,1.5,0.9,0.1,2.9,0c1-0.1,2.4,0.8,4,2.6c1.2,1.3,3.2,4.5,6.2,9.6c1.8,3,3.9,6.5,6.2,10.5C20.1,24.1,20.6,25.2,20.7,26.1z\n              M38.6,21.1c0,0.9-0.6,1.7-1.7,2.3c-1.1,0.6-2.2,1-3.3,1c-0.8,0.1-2.5-1.6-5.3-5c-3.1-3.8-4.7-7.2-4.7-10c0-1.4,1-2.2,2.9-2.4\n              c1,0,3.3,2.1,6.7,6.2C36.5,17.4,38.4,20,38.6,21.1z\"/>\n            </svg>\n            <div id=\"text\"><p className=\"quote-text\">{this.state.quote}</p></div>\n            <div id=\"author\"><p>- Homer Jay Simpson</p></div>\n            <a id=\"tweet-quote\" href=\"http://www.twitter.com/intent/tweet\" onClick={this.tweetClick} target=\"_blank\" rel=\"noopener noreferrer\" >\n              <button className=\"btn\">Tweet</button>\n            </a>\n            <div id=\"new-quote\">\n              <button className=\"btn\" onClick={this.quoteClick}>New Quote</button>\n            </div>\n          </div>\n            <img src={homer1} alt=\"Homer Simpson\" className=\"footer-image noselect\" onClick={this.homerClick} />\n            <footer>\n              <div className=\"footer-content container noselect\">\n                by swoodo\n              </div>\n            </footer>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}